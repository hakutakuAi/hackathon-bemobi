/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { Authentication12 } from './authentication12';
// May contain unused imports in some cases
// @ts-ignore
import type { FileBasedStreamConfig3 } from './file-based-stream-config3';

/**
 * Used during spec; allows the developer to configure the cloud provider specific options that are needed when users configure a file-based source.
 * @export
 * @interface SourceSftpBulk
 */
export interface SourceSftpBulk {
    /**
     * UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.
     * @type {string}
     * @memberof SourceSftpBulk
     */
    'start_date'?: string;
    /**
     * Each instance of this configuration defines a <a href=\"https://docs.airbyte.com/cloud/core-concepts#stream\">stream</a>. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.
     * @type {Array<FileBasedStreamConfig3>}
     * @memberof SourceSftpBulk
     */
    'streams': Array<FileBasedStreamConfig3>;
    /**
     * The server host address
     * @type {string}
     * @memberof SourceSftpBulk
     */
    'host': string;
    /**
     * The server user
     * @type {string}
     * @memberof SourceSftpBulk
     */
    'username': string;
    /**
     * 
     * @type {Authentication12}
     * @memberof SourceSftpBulk
     */
    'credentials': Authentication12;
    /**
     * The server port
     * @type {number}
     * @memberof SourceSftpBulk
     */
    'port'?: number;
    /**
     * The directory to search files for sync
     * @type {string}
     * @memberof SourceSftpBulk
     */
    'folder_path'?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceSftpBulk
     */
    'sourceType': SourceSftpBulkSourceTypeEnum;
}

export const SourceSftpBulkSourceTypeEnum = {
    SFTP_BULK: 'sftp-bulk'
} as const;

export type SourceSftpBulkSourceTypeEnum = typeof SourceSftpBulkSourceTypeEnum[keyof typeof SourceSftpBulkSourceTypeEnum];


