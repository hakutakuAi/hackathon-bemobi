/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { SSHTunnelMethod2 } from './sshtunnel-method2';
// May contain unused imports in some cases
// @ts-ignore
import type { SSLModes4 } from './sslmodes4';

/**
 * 
 * @export
 * @interface DestinationYellowbrick
 */
export interface DestinationYellowbrick {
    /**
     * Hostname of the database.
     * @type {string}
     * @memberof DestinationYellowbrick
     */
    'host': string;
    /**
     * Port of the database.
     * @type {number}
     * @memberof DestinationYellowbrick
     */
    'port': number;
    /**
     * Name of the database.
     * @type {string}
     * @memberof DestinationYellowbrick
     */
    'database': string;
    /**
     * The default schema tables are written to if the source does not specify a namespace. The usual value for this field is \"public\".
     * @type {string}
     * @memberof DestinationYellowbrick
     */
    'schema': string;
    /**
     * Username to use to access the database.
     * @type {string}
     * @memberof DestinationYellowbrick
     */
    'username': string;
    /**
     * Password associated with the username.
     * @type {string}
     * @memberof DestinationYellowbrick
     */
    'password'?: string;
    /**
     * Encrypt data using SSL. When activating SSL, please select one of the connection modes.
     * @type {boolean}
     * @memberof DestinationYellowbrick
     */
    'ssl'?: boolean;
    /**
     * 
     * @type {SSLModes4}
     * @memberof DestinationYellowbrick
     */
    'ssl_mode'?: SSLModes4;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as \'key=value\' pairs separated by the symbol \'&\'. (example: key1=value1&key2=value2&key3=value3).
     * @type {string}
     * @memberof DestinationYellowbrick
     */
    'jdbc_url_params'?: string;
    /**
     * 
     * @type {SSHTunnelMethod2}
     * @memberof DestinationYellowbrick
     */
    'tunnel_method'?: SSHTunnelMethod2;
    /**
     * 
     * @type {string}
     * @memberof DestinationYellowbrick
     */
    'destinationType': DestinationYellowbrickDestinationTypeEnum;
}

export const DestinationYellowbrickDestinationTypeEnum = {
    YELLOWBRICK: 'yellowbrick'
} as const;

export type DestinationYellowbrickDestinationTypeEnum = typeof DestinationYellowbrickDestinationTypeEnum[keyof typeof DestinationYellowbrickDestinationTypeEnum];


