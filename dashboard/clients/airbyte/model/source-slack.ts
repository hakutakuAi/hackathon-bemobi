/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { AuthenticationMechanism2 } from './authentication-mechanism2';

/**
 * 
 * @export
 * @interface SourceSlack
 */
export interface SourceSlack {
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     * @type {string}
     * @memberof SourceSlack
     */
    'start_date': string;
    /**
     * How far into the past to look for messages in threads, default is 0 days
     * @type {number}
     * @memberof SourceSlack
     */
    'lookback_window': number;
    /**
     * Whether to join all channels or to sync data only from channels the bot is already in.  If false, you\'ll need to manually add the bot to all the channels from which you\'d like to sync messages. 
     * @type {boolean}
     * @memberof SourceSlack
     */
    'join_channels': boolean;
    /**
     * Whether to read information from private channels that the bot is already in.  If false, only public channels will be read.  If true, the bot must be manually added to private channels. 
     * @type {boolean}
     * @memberof SourceSlack
     */
    'include_private_channels'?: boolean;
    /**
     * A channel name list (without leading \'#\' char) which limit the channels from which you\'d like to sync. Empty list means no filter.
     * @type {Array<string>}
     * @memberof SourceSlack
     */
    'channel_filter'?: Array<string>;
    /**
     * 
     * @type {AuthenticationMechanism2}
     * @memberof SourceSlack
     */
    'credentials'?: AuthenticationMechanism2;
    /**
     * 
     * @type {string}
     * @memberof SourceSlack
     */
    'sourceType': SourceSlackSourceTypeEnum;
}

export const SourceSlackSourceTypeEnum = {
    SLACK: 'slack'
} as const;

export type SourceSlackSourceTypeEnum = typeof SourceSlackSourceTypeEnum[keyof typeof SourceSlackSourceTypeEnum];


