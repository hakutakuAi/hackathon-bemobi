/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { Format4 } from './format4';

/**
 * 
 * @export
 * @interface FileBasedStreamConfig4
 */
export interface FileBasedStreamConfig4 {
    /**
     * The name of the stream.
     * @type {string}
     * @memberof FileBasedStreamConfig4
     */
    'name': string;
    /**
     * The pattern used to specify which files should be selected from the file system. For more information on glob pattern matching look <a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">here</a>.
     * @type {Array<string>}
     * @memberof FileBasedStreamConfig4
     */
    'globs'?: Array<string>;
    /**
     * The name of the validation policy that dictates sync behavior when a record does not adhere to the stream schema.
     * @type {string}
     * @memberof FileBasedStreamConfig4
     */
    'validation_policy'?: FileBasedStreamConfig4ValidationPolicyEnum;
    /**
     * The schema that will be used to validate records extracted from the file. This will override the stream schema that is auto-detected from incoming files.
     * @type {string}
     * @memberof FileBasedStreamConfig4
     */
    'input_schema'?: string;
    /**
     * When the state history of the file store is full, syncs will only read files that were last modified in the provided day range.
     * @type {number}
     * @memberof FileBasedStreamConfig4
     */
    'days_to_sync_if_history_is_full'?: number;
    /**
     * 
     * @type {Format4}
     * @memberof FileBasedStreamConfig4
     */
    'format': Format4;
    /**
     * When enabled, syncs will not validate or structure records against the stream\'s schema.
     * @type {boolean}
     * @memberof FileBasedStreamConfig4
     */
    'schemaless'?: boolean;
    /**
     * The number of resent files which will be used to discover the schema for this stream.
     * @type {number}
     * @memberof FileBasedStreamConfig4
     */
    'recent_n_files_to_read_for_schema_discovery'?: number;
}

export const FileBasedStreamConfig4ValidationPolicyEnum = {
    EMIT_RECORD: 'Emit Record',
    SKIP_RECORD: 'Skip Record',
    WAIT_FOR_DISCOVER: 'Wait for Discover'
} as const;

export type FileBasedStreamConfig4ValidationPolicyEnum = typeof FileBasedStreamConfig4ValidationPolicyEnum[keyof typeof FileBasedStreamConfig4ValidationPolicyEnum];


