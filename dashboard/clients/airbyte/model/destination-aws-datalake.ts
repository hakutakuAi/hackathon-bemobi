/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { AuthenticationMode } from './authentication-mode';
// May contain unused imports in some cases
// @ts-ignore
import type { OutputFormat } from './output-format';

/**
 * 
 * @export
 * @interface DestinationAwsDatalake
 */
export interface DestinationAwsDatalake {
    /**
     * target aws account id
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'aws_account_id'?: string;
    /**
     * 
     * @type {AuthenticationMode}
     * @memberof DestinationAwsDatalake
     */
    'credentials': AuthenticationMode;
    /**
     * The region of the S3 bucket. See <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\">here</a> for all region codes.
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'region': DestinationAwsDatalakeRegionEnum;
    /**
     * The name of the S3 bucket. Read more <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\">here</a>.
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'bucket_name': string;
    /**
     * S3 prefix
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'bucket_prefix'?: string;
    /**
     * The default database this destination will use to create tables in per stream. Can be changed per connection by customizing the namespace.
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'lakeformation_database_name': string;
    /**
     * Add a default tag key to databases created by this destination
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'lakeformation_database_default_tag_key'?: string;
    /**
     * Add default values for the `Tag Key` to databases created by this destination. Comma separate for multiple values.
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'lakeformation_database_default_tag_values'?: string;
    /**
     * Whether to create tables as LF governed tables.
     * @type {boolean}
     * @memberof DestinationAwsDatalake
     */
    'lakeformation_governed_tables'?: boolean;
    /**
     * 
     * @type {OutputFormat}
     * @memberof DestinationAwsDatalake
     */
    'format'?: OutputFormat;
    /**
     * Partition data by cursor fields when a cursor field is a date
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'partitioning'?: DestinationAwsDatalakePartitioningEnum;
    /**
     * Cast float/double as decimal(38,18). This can help achieve higher accuracy and represent numbers correctly as received from the source.
     * @type {boolean}
     * @memberof DestinationAwsDatalake
     */
    'glue_catalog_float_as_decimal'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DestinationAwsDatalake
     */
    'destinationType': DestinationAwsDatalakeDestinationTypeEnum;
}

export const DestinationAwsDatalakeRegionEnum = {
    EMPTY: '',
    AF_SOUTH_1: 'af-south-1',
    AP_EAST_1: 'ap-east-1',
    AP_NORTHEAST_1: 'ap-northeast-1',
    AP_NORTHEAST_2: 'ap-northeast-2',
    AP_NORTHEAST_3: 'ap-northeast-3',
    AP_SOUTH_1: 'ap-south-1',
    AP_SOUTH_2: 'ap-south-2',
    AP_SOUTHEAST_1: 'ap-southeast-1',
    AP_SOUTHEAST_2: 'ap-southeast-2',
    AP_SOUTHEAST_3: 'ap-southeast-3',
    AP_SOUTHEAST_4: 'ap-southeast-4',
    CA_CENTRAL_1: 'ca-central-1',
    CA_WEST_1: 'ca-west-1',
    CN_NORTH_1: 'cn-north-1',
    CN_NORTHWEST_1: 'cn-northwest-1',
    EU_CENTRAL_1: 'eu-central-1',
    EU_CENTRAL_2: 'eu-central-2',
    EU_NORTH_1: 'eu-north-1',
    EU_SOUTH_1: 'eu-south-1',
    EU_SOUTH_2: 'eu-south-2',
    EU_WEST_1: 'eu-west-1',
    EU_WEST_2: 'eu-west-2',
    EU_WEST_3: 'eu-west-3',
    IL_CENTRAL_1: 'il-central-1',
    ME_CENTRAL_1: 'me-central-1',
    ME_SOUTH_1: 'me-south-1',
    SA_EAST_1: 'sa-east-1',
    US_EAST_1: 'us-east-1',
    US_EAST_2: 'us-east-2',
    US_GOV_EAST_1: 'us-gov-east-1',
    US_GOV_WEST_1: 'us-gov-west-1',
    US_WEST_1: 'us-west-1',
    US_WEST_2: 'us-west-2'
} as const;

export type DestinationAwsDatalakeRegionEnum = typeof DestinationAwsDatalakeRegionEnum[keyof typeof DestinationAwsDatalakeRegionEnum];
export const DestinationAwsDatalakePartitioningEnum = {
    NO_PARTITIONING: 'NO PARTITIONING',
    DATE: 'DATE',
    YEAR: 'YEAR',
    MONTH: 'MONTH',
    DAY: 'DAY',
    YEAR_MONTH: 'YEAR/MONTH',
    YEAR_MONTH_DAY: 'YEAR/MONTH/DAY'
} as const;

export type DestinationAwsDatalakePartitioningEnum = typeof DestinationAwsDatalakePartitioningEnum[keyof typeof DestinationAwsDatalakePartitioningEnum];
export const DestinationAwsDatalakeDestinationTypeEnum = {
    AWS_DATALAKE: 'aws-datalake'
} as const;

export type DestinationAwsDatalakeDestinationTypeEnum = typeof DestinationAwsDatalakeDestinationTypeEnum[keyof typeof DestinationAwsDatalakeDestinationTypeEnum];


