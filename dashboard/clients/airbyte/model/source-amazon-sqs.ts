/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface SourceAmazonSqs
 */
export interface SourceAmazonSqs {
    /**
     * URL of the SQS Queue
     * @type {string}
     * @memberof SourceAmazonSqs
     */
    'queue_url': string;
    /**
     * AWS Region of the SQS Queue
     * @type {string}
     * @memberof SourceAmazonSqs
     */
    'region': SourceAmazonSqsRegionEnum;
    /**
     * If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail. 
     * @type {boolean}
     * @memberof SourceAmazonSqs
     */
    'delete_messages': boolean;
    /**
     * Max amount of messages to get in one batch (10 max)
     * @type {number}
     * @memberof SourceAmazonSqs
     */
    'max_batch_size'?: number;
    /**
     * Max amount of time in seconds to wait for messages in a single poll (20 max)
     * @type {number}
     * @memberof SourceAmazonSqs
     */
    'max_wait_time'?: number;
    /**
     * Comma separated list of Mesage Attribute names to return
     * @type {string}
     * @memberof SourceAmazonSqs
     */
    'attributes_to_return'?: string;
    /**
     * Modify the Visibility Timeout of the individual message from the Queue\'s default (seconds).
     * @type {number}
     * @memberof SourceAmazonSqs
     */
    'visibility_timeout'?: number;
    /**
     * The Access Key ID of the AWS IAM Role to use for pulling messages
     * @type {string}
     * @memberof SourceAmazonSqs
     */
    'access_key'?: string;
    /**
     * The Secret Key of the AWS IAM Role to use for pulling messages
     * @type {string}
     * @memberof SourceAmazonSqs
     */
    'secret_key'?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceAmazonSqs
     */
    'sourceType': SourceAmazonSqsSourceTypeEnum;
}

export const SourceAmazonSqsRegionEnum = {
    AF_SOUTH_1: 'af-south-1',
    AP_EAST_1: 'ap-east-1',
    AP_NORTHEAST_1: 'ap-northeast-1',
    AP_NORTHEAST_2: 'ap-northeast-2',
    AP_NORTHEAST_3: 'ap-northeast-3',
    AP_SOUTH_1: 'ap-south-1',
    AP_SOUTH_2: 'ap-south-2',
    AP_SOUTHEAST_1: 'ap-southeast-1',
    AP_SOUTHEAST_2: 'ap-southeast-2',
    AP_SOUTHEAST_3: 'ap-southeast-3',
    AP_SOUTHEAST_4: 'ap-southeast-4',
    CA_CENTRAL_1: 'ca-central-1',
    CA_WEST_1: 'ca-west-1',
    CN_NORTH_1: 'cn-north-1',
    CN_NORTHWEST_1: 'cn-northwest-1',
    EU_CENTRAL_1: 'eu-central-1',
    EU_CENTRAL_2: 'eu-central-2',
    EU_NORTH_1: 'eu-north-1',
    EU_SOUTH_1: 'eu-south-1',
    EU_SOUTH_2: 'eu-south-2',
    EU_WEST_1: 'eu-west-1',
    EU_WEST_2: 'eu-west-2',
    EU_WEST_3: 'eu-west-3',
    IL_CENTRAL_1: 'il-central-1',
    ME_CENTRAL_1: 'me-central-1',
    ME_SOUTH_1: 'me-south-1',
    SA_EAST_1: 'sa-east-1',
    US_EAST_1: 'us-east-1',
    US_EAST_2: 'us-east-2',
    US_GOV_EAST_1: 'us-gov-east-1',
    US_GOV_WEST_1: 'us-gov-west-1',
    US_WEST_1: 'us-west-1',
    US_WEST_2: 'us-west-2'
} as const;

export type SourceAmazonSqsRegionEnum = typeof SourceAmazonSqsRegionEnum[keyof typeof SourceAmazonSqsRegionEnum];
export const SourceAmazonSqsSourceTypeEnum = {
    AMAZON_SQS: 'amazon-sqs'
} as const;

export type SourceAmazonSqsSourceTypeEnum = typeof SourceAmazonSqsSourceTypeEnum[keyof typeof SourceAmazonSqsSourceTypeEnum];


