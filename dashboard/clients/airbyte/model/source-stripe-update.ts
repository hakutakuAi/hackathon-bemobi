/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface SourceStripeUpdate
 */
export interface SourceStripeUpdate {
    /**
     * Your Stripe account ID (starts with \'acct_\', find yours <a href=\"https://dashboard.stripe.com/settings/account\">here</a>).
     * @type {string}
     * @memberof SourceStripeUpdate
     */
    'account_id': string;
    /**
     * Stripe API key (usually starts with \'sk_live_\'; find yours <a href=\"https://dashboard.stripe.com/apikeys\">here</a>).
     * @type {string}
     * @memberof SourceStripeUpdate
     */
    'client_secret': string;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated.
     * @type {string}
     * @memberof SourceStripeUpdate
     */
    'start_date'?: string;
    /**
     * When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. The Lookback Window only applies to streams that do not support event-based incremental syncs: Events, SetupAttempts, ShippingRates, BalanceTransactions, Files, FileLinks, Refunds. More info <a href=\"https://docs.airbyte.com/integrations/sources/stripe#requirements\">here</a>
     * @type {number}
     * @memberof SourceStripeUpdate
     */
    'lookback_window_days'?: number;
    /**
     * The time increment used by the connector when requesting data from the Stripe API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted.
     * @type {number}
     * @memberof SourceStripeUpdate
     */
    'slice_range'?: number;
    /**
     * The number of worker thread to use for the sync. The performance upper boundary depends on call_rate_limit setting and type of account.
     * @type {number}
     * @memberof SourceStripeUpdate
     */
    'num_workers'?: number;
    /**
     * The number of API calls per second that you allow connector to make. This value can not be bigger than real API call rate limit (https://stripe.com/docs/rate-limits). If not specified the default maximum is 25 and 100 calls per second for test and production tokens respectively.
     * @type {number}
     * @memberof SourceStripeUpdate
     */
    'call_rate_limit'?: number;
}

