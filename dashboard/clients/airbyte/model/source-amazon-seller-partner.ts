/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { ReportOptions } from './report-options';

/**
 * 
 * @export
 * @interface SourceAmazonSellerPartner
 */
export interface SourceAmazonSellerPartner {
    /**
     * 
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'auth_type'?: SourceAmazonSellerPartnerAuthTypeEnum;
    /**
     * Select the AWS Environment.
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'aws_environment': SourceAmazonSellerPartnerAwsEnvironmentEnum;
    /**
     * Select the AWS Region.
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'region': SourceAmazonSellerPartnerRegionEnum;
    /**
     * Type of the Account you\'re going to authorize the Airbyte application by
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'account_type': SourceAmazonSellerPartnerAccountTypeEnum;
    /**
     * Your Login with Amazon Client ID.
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'lwa_app_id': string;
    /**
     * Your Login with Amazon Client Secret.
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'lwa_client_secret': string;
    /**
     * The Refresh Token obtained via OAuth flow authorization.
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'refresh_token': string;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. If start date is not provided or older than 2 years ago from today, the date 2 years ago from today will be used.
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'replication_start_date'?: string;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'replication_end_date'?: string;
    /**
     * For syncs spanning a large date range, this option is used to request data in a smaller fixed window to improve sync reliability. This time window can be configured granularly by day.
     * @type {number}
     * @memberof SourceAmazonSellerPartner
     */
    'period_in_days'?: number;
    /**
     * Additional information passed to reports. This varies by report type.
     * @type {Array<ReportOptions>}
     * @memberof SourceAmazonSellerPartner
     */
    'report_options_list'?: Array<ReportOptions>;
    /**
     * For report based streams with known amount of requests per time period, this option will use waiting time between requests to avoid fatal statuses in reports. See <a href=\"https://docs.airbyte.com/integrations/sources/amazon-seller-partner#limitations--troubleshooting\" target=\"_blank\">Troubleshooting</a> section for more details
     * @type {boolean}
     * @memberof SourceAmazonSellerPartner
     */
    'wait_to_avoid_fatal_errors'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SourceAmazonSellerPartner
     */
    'sourceType': SourceAmazonSellerPartnerSourceTypeEnum;
}

export const SourceAmazonSellerPartnerAuthTypeEnum = {
    OAUTH2_0: 'oauth2.0'
} as const;

export type SourceAmazonSellerPartnerAuthTypeEnum = typeof SourceAmazonSellerPartnerAuthTypeEnum[keyof typeof SourceAmazonSellerPartnerAuthTypeEnum];
export const SourceAmazonSellerPartnerAwsEnvironmentEnum = {
    PRODUCTION: 'PRODUCTION',
    SANDBOX: 'SANDBOX'
} as const;

export type SourceAmazonSellerPartnerAwsEnvironmentEnum = typeof SourceAmazonSellerPartnerAwsEnvironmentEnum[keyof typeof SourceAmazonSellerPartnerAwsEnvironmentEnum];
export const SourceAmazonSellerPartnerRegionEnum = {
    AE: 'AE',
    AU: 'AU',
    BE: 'BE',
    BR: 'BR',
    CA: 'CA',
    DE: 'DE',
    EG: 'EG',
    ES: 'ES',
    FR: 'FR',
    GB: 'GB',
    IN: 'IN',
    IT: 'IT',
    JP: 'JP',
    MX: 'MX',
    NL: 'NL',
    PL: 'PL',
    SA: 'SA',
    SE: 'SE',
    SG: 'SG',
    TR: 'TR',
    UK: 'UK',
    US: 'US'
} as const;

export type SourceAmazonSellerPartnerRegionEnum = typeof SourceAmazonSellerPartnerRegionEnum[keyof typeof SourceAmazonSellerPartnerRegionEnum];
export const SourceAmazonSellerPartnerAccountTypeEnum = {
    SELLER: 'Seller',
    VENDOR: 'Vendor'
} as const;

export type SourceAmazonSellerPartnerAccountTypeEnum = typeof SourceAmazonSellerPartnerAccountTypeEnum[keyof typeof SourceAmazonSellerPartnerAccountTypeEnum];
export const SourceAmazonSellerPartnerSourceTypeEnum = {
    AMAZON_SELLER_PARTNER: 'amazon-seller-partner'
} as const;

export type SourceAmazonSellerPartnerSourceTypeEnum = typeof SourceAmazonSellerPartnerSourceTypeEnum[keyof typeof SourceAmazonSellerPartnerSourceTypeEnum];


