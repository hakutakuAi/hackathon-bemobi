/* tslint:disable */
/* eslint-disable */
/**
 * airbyte-api
 * Programatically control Airbyte Cloud, OSS & Enterprise.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { Authentication4 } from './authentication4';
// May contain unused imports in some cases
// @ts-ignore
import type { FileBasedStreamConfig2 } from './file-based-stream-config2';

/**
 * SourceMicrosoftSharePointSpec class for Microsoft SharePoint Source Specification. This class combines the authentication details with additional configuration for the SharePoint API.
 * @export
 * @interface SourceMicrosoftSharepoint
 */
export interface SourceMicrosoftSharepoint {
    /**
     * UTC date and time in the format 2017-01-25T00:00:00.000000Z. Any file modified before this date will not be replicated.
     * @type {string}
     * @memberof SourceMicrosoftSharepoint
     */
    'start_date'?: string;
    /**
     * Each instance of this configuration defines a <a href=\"https://docs.airbyte.com/cloud/core-concepts#stream\">stream</a>. Use this to define which files belong in the stream, their format, and how they should be parsed and validated. When sending data to warehouse destination such as Snowflake or BigQuery, each stream is a separate table.
     * @type {Array<FileBasedStreamConfig2>}
     * @memberof SourceMicrosoftSharepoint
     */
    'streams': Array<FileBasedStreamConfig2>;
    /**
     * 
     * @type {Authentication4}
     * @memberof SourceMicrosoftSharepoint
     */
    'credentials': Authentication4;
    /**
     * Specifies the location(s) to search for files. Valid options are \'ACCESSIBLE_DRIVES\' for all SharePoint drives the user can access, \'SHARED_ITEMS\' for shared items the user has access to, and \'ALL\' to search both.
     * @type {string}
     * @memberof SourceMicrosoftSharepoint
     */
    'search_scope'?: SourceMicrosoftSharepointSearchScopeEnum;
    /**
     * Path to a specific folder within the drives to search for files. Leave empty to search all folders of the drives. This does not apply to shared items.
     * @type {string}
     * @memberof SourceMicrosoftSharepoint
     */
    'folder_path'?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceMicrosoftSharepoint
     */
    'sourceType': SourceMicrosoftSharepointSourceTypeEnum;
}

export const SourceMicrosoftSharepointSearchScopeEnum = {
    ACCESSIBLE_DRIVES: 'ACCESSIBLE_DRIVES',
    SHARED_ITEMS: 'SHARED_ITEMS',
    ALL: 'ALL'
} as const;

export type SourceMicrosoftSharepointSearchScopeEnum = typeof SourceMicrosoftSharepointSearchScopeEnum[keyof typeof SourceMicrosoftSharepointSearchScopeEnum];
export const SourceMicrosoftSharepointSourceTypeEnum = {
    MICROSOFT_SHAREPOINT: 'microsoft-sharepoint'
} as const;

export type SourceMicrosoftSharepointSourceTypeEnum = typeof SourceMicrosoftSharepointSourceTypeEnum[keyof typeof SourceMicrosoftSharepointSourceTypeEnum];


